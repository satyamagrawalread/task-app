{"ast":null,"code":"var _jsxFileName = \"/Users/satyamagrawal/Desktop/Satyam/reactApp/myapp/src/features/task-list.js\";\nimport React from 'react';\nimport { AiFillMinusSquare, AiFillEdit } from 'react-icons/ai';\nexport default function TaskList(_ref) {\n  var _this = this;\n  var tasks = _ref.tasks,\n    _onDragStart = _ref.onDragStart,\n    handleDelete = _ref.handleDelete,\n    handleEdit = _ref.handleEdit;\n  // const [isEditing, setIsEditing] = useState(false);\n  return tasks.map(function (task) {\n    // let classNames= `${task.completed ? \"complete\": \"incomplete\"}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: task.id,\n      className: \"task wip\",\n      draggable: true,\n      onDragStart: function onDragStart(e) {\n        return _onDragStart(e, task.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-list-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }\n    }, task.date)), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, task.category));\n  });\n}","map":{"version":3,"names":["React","AiFillMinusSquare","AiFillEdit","TaskList","tasks","onDragStart","handleDelete","handleEdit","map","task","id","e","date","category"],"sources":["/Users/satyamagrawal/Desktop/Satyam/reactApp/myapp/src/features/task-list.js"],"sourcesContent":["import React from 'react';\nimport { AiFillMinusSquare, AiFillEdit } from 'react-icons/ai';\n\nexport default function TaskList({tasks, onDragStart, handleDelete, handleEdit}) {\n    // const [isEditing, setIsEditing] = useState(false);\n    return tasks.map((task) => {\n    // let classNames= `${task.completed ? \"complete\": \"incomplete\"}`;\n      return (\n        <div key={task.id} className={`task wip`}\n        draggable\n        onDragStart={(e) => onDragStart(e, task.id)}>\n            <div className='task-list-1'>\n              \n              <h6>{task.date}</h6>\n            </div>\n            <h5>{task.category}</h5>\n        </div>\n      )\n    })\n  }\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,gBAAgB;AAE9D,eAAe,SAASC,QAAQ,OAAiD;EAAA;EAAA,IAA/CC,KAAK,QAALA,KAAK;IAAEC,YAAW,QAAXA,WAAW;IAAEC,YAAY,QAAZA,YAAY;IAAEC,UAAU,QAAVA,UAAU;EAC1E;EACA,OAAOH,KAAK,CAACI,GAAG,CAAC,UAACC,IAAI,EAAK;IAC3B;IACE,oBACE;MAAK,GAAG,EAAEA,IAAI,CAACC,EAAG;MAAC,SAAS,YAAa;MACzC,SAAS;MACT,WAAW,EAAE,qBAACC,CAAC;QAAA,OAAKN,YAAW,CAACM,CAAC,EAAEF,IAAI,CAACC,EAAE,CAAC;MAAA,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACxC;MAAK,SAAS,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAE1B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKD,IAAI,CAACG,IAAI,CAAM,CAChB,eACN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKH,IAAI,CAACI,QAAQ,CAAM,CACtB;EAEV,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}